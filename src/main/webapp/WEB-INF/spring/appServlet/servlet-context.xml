<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">  <!-- StringHttpMessageConverter : String에 대해서만 encoding처리 -->
				<property name="supportedMediaTypes">
					<list>
						<value>text/html; charset=UTF-8</value>
					</list>
				</property>
			</bean>
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"> <!--MappingJackson2HttpMessageConverter : 객체를 JsonObject로 자동변환  -->
			   <property name="supportedMediaTypes">
			       <list>
			            <value>application/json; charset=UTF-8</value>
			        </list>
			   </property>
			</bean>
		</mvc:message-converters>
		
	   <!-- <mvc:argument-resolvers>
		 	<bean class="co.kr.wdt.security.AuthUserHandlerMethodArgumentResolver"/>           
	   </mvc:argument-resolvers> -->
	   
	</mvc:annotation-driven>
	
   	<!-- 서블릿 컨테이너의 디폴트 서블릿 위임 핸들러 -->
	<mvc:default-servlet-handler />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- <mvc:resources mapping="/resources/**" location="/resources/" /> -->
	

	<!-- Multipart Resolver -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

		<!-- 최대업로드 가능한 바이트크기 -->
		<property name="maxUploadSize" value="52428800" />

		<!-- 디스크에 임시 파일을 생성하기 전에 메모리에 보관할수있는 최대 바이트 크기 -->
		<property name="maxInMemorySize" value="52428800" />

		<!-- defaultEncoding -->
		<property name="defaultEncoding" value="utf-8" />
	</bean>
	
    <!-- 파일업로드 bean -->
	<bean id="uploadPath" class="java.lang.String">
		<constructor-arg value="D:\bitsaltlux\bitsaltlux_semiproject\src\main\webapp\resources\upload"/>
	</bean>
	
	<!-- 일반 파일 업로드 경로 -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="1" />
	</bean>
	
	<!-- LoginInterceptor -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/login/loginProc.do"/>
			<bean class="co.kr.wdt.security.LoginInterceptor"/>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/login/logOut.do"/>
			<bean class="co.kr.wdt.security.LogoutInterceptor"/>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="/assets/**"/>
			<mvc:exclude-mapping path="/login/loginProc.do"/>
			<mvc:exclude-mapping path="/login/logOut.do"/>
			<bean class="co.kr.wdt.security.AuthInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>

	<context:annotation-config />
	<context:component-scan base-package="co.kr.wdt" />

</beans>
